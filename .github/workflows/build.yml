name: CI and Release

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - main

permissions:
  contents: write

jobs:
  build:
    name: üß™ Lint, Test and Build
    runs-on: ubuntu-latest

    steps:
      - name: ‚¨áÔ∏è Checkout code
        uses: actions/checkout@v4

      - name: üîß Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: üõ†Ô∏è Install tools
        run: make install-tools

      - name: üé® Lint
        run: make lint

      - name: üíÖ Format check
        run: make format

      - name: üß™ Run tests
        run: make test

      - name: üì¶ Build example
        run: make build

  changelog:
    name: üìù Generate Changelog
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: ‚¨áÔ∏è Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: üîß Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: üß∞ Install git-chglog
        run: |
          go install github.com/git-chglog/git-chglog/cmd/git-chglog@latest
          echo "$HOME/go/bin" >> $GITHUB_PATH

      - name: üìù Generate CHANGELOG.md
        run: make changelog

      - name: üîÉ Commit and push changelog
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add CHANGELOG.md
          git commit -m "docs(changelog): update changelog [skip ci]" || echo "No changes to commit"
          git push origin main

  version:
    name: üîñ Create Tag
    if: github.ref == 'refs/heads/main' 
    runs-on: ubuntu-latest
    needs: changelog

    steps:
      - name: ‚¨áÔ∏è Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: üîß Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: üß∞ Install go-semantic-release
        run: |
          go install github.com/go-semantic-release/semantic-release/v2/cmd/semantic-release@latest
          echo "$HOME/go/bin" >> $GITHUB_PATH

      - name: üè∑Ô∏è Run semantic-release
        id: semantic
        run: |
          semantic-release --no-ci --provider github --token ${{ secrets.GH_TOKEN }} || true
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}