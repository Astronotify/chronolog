name: CI and Release

on:
  push:
    tags:
      - 'v*.*.*'    
    branches:
       - '**'
  pull_request:
    branches:
      - main       

permissions:
  contents: write 
      
jobs:
  build:
    name: Lint, Test and Format
    runs-on: ubuntu-latest

    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v4

      - name: 🧰 Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: 🔧 Install dev tools
        run: make install-tools

      - name: 🎨 Lint
        run: make lint

      - name: 💅 Format check
        run: |
          make format

      - name: 🧪 Run tests
        run: make test

      - name: 📦 Build examples
        run: make build

  version:
    name: 🔖 Determine Next Version
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.release.outputs.new_tag }}

    steps:
      - name: ⬇️ Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🔧 Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: 🧰 Install go-semantic-release
        run: |
          go install github.com/go-semantic-release/semantic-release/v2/cmd/semantic-release@latest
          echo "$HOME/go/bin" >> $GITHUB_PATH

      - name: 🚀 Generate and Push Tag
        id: release
        run: semantic-release --ci
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

  release:
    name: 📦 Create Release
    runs-on: ubuntu-latest
    needs: [build, version]
    if: needs.version.outputs.new_tag != ''

    steps:
      - name: ⬇️ Checkout
        uses: actions/checkout@v4

      - name: 🔧 Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: 🧰 Install git-chglog
        run: |
          go install github.com/git-chglog/git-chglog/cmd/git-chglog@latest
          echo "$HOME/go/bin" >> $GITHUB_PATH

      - name: 📝 Generate CHANGELOG.md
        run: make changelog

      - name: 🚀 Publish GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          body_path: CHANGELOG.md
          tag_name: ${{ needs.version.outputs.new_tag }}
          name: Release ${{ needs.version.outputs.new_tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
    